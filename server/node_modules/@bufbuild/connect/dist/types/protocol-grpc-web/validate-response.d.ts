import type { Compression } from "../protocol/index.js";
/**
 * Validates response status and header for the gRPC-web protocol.
 *
 * Throws a ConnectError if the header contains an error status,
 * the HTTP status indicates an error, or if the content type is
 * unexpected.
 *
 * Returns an object that indicates whether a gRPC status was found
 * in the response header. In this case, clients can not expect a
 * trailer.
 *
 * @private Internal code, does not follow semantic versioning.
 */
export declare function validateResponse(useBinaryFormat: boolean, status: number, headers: Headers): {
    foundStatus: boolean;
};
/**
 * Validates response status and header for the gRPC-web protocol.
 * This function is identical to validateResponse(), but also verifies
 * that a given encoding header is acceptable.
 *
 * Returns an object with the response compression, and a boolean
 * indicating whether a gRPC status was found in the response header
 * (in this case, clients can not expect a trailer).
 *
 * @private Internal code, does not follow semantic versioning.
 */
export declare function validateResponseWithCompression(useBinaryFormat: boolean, acceptCompression: Compression[], status: number, headers: Headers): {
    foundStatus: boolean;
    compression: Compression | undefined;
};
