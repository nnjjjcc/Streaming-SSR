/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import * as http2 from "http2";
import * as http from "http";
import * as https from "https";
import type { UniversalClientFn } from "@bufbuild/connect/protocol";
/**
 * Create an HTTP client using the Node.js `http` or `https` package.
 *
 * The HTTP client is a simple function conforming to the type UniversalClientFn.
 * It takes an UniversalClientRequest as an argument, and returns a promise for
 * an UniversalClientResponse.
 */
export declare function createNodeHttp1Client(httpOptions: Omit<http.RequestOptions, "signal"> | Omit<https.RequestOptions, "signal"> | undefined): UniversalClientFn;
/**
 * Create an HTTP client using the Node.js `http2` package.
 *
 * Note that the client is bound to the authority, and by default, it will close
 * the HTTP/2 session after the response is read to the end.
 *
 * The HTTP client is a simple function conforming to the type UniversalClientFn.
 * It takes an UniversalClientRequest as an argument, and returns a promise for
 * an UniversalClientResponse.
 */
export declare function createNodeHttp2Client(authority: URL | string, keepSessionOpen: boolean, http2SessionOptions: http2.ClientSessionOptions | http2.SecureClientSessionOptions | undefined): UniversalClientFn;
