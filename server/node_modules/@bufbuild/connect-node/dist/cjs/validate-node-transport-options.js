"use strict";
// Copyright 2021-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateNodeTransportOptions = void 0;
const protocol_1 = require("@bufbuild/connect/protocol");
const compression_js_1 = require("./compression.js");
const node_universal_client_js_1 = require("./node-universal-client.js");
/**
 * Asserts that the options are within sane limits, and returns default values
 * where no value is provided.
 */
function validateNodeTransportOptions(options) {
    var _a, _b, _c, _d, _e;
    return Object.assign(Object.assign({ baseUrl: options.baseUrl, useBinaryFormat: (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : true, interceptors: (_b = options.interceptors) !== null && _b !== void 0 ? _b : [] }, (0, protocol_1.validateReadWriteMaxBytes)(options.readMaxBytes, options.writeMaxBytes, options.compressMinBytes)), { client: options.httpVersion == "2"
            ? (0, node_universal_client_js_1.createNodeHttp2Client)(options.baseUrl, (_c = options.keepSessionAlive) !== null && _c !== void 0 ? _c : false, options.nodeOptions)
            : (0, node_universal_client_js_1.createNodeHttp1Client)(options.nodeOptions), sendCompression: (_d = options.sendCompression) !== null && _d !== void 0 ? _d : null, acceptCompression: (_e = options.acceptCompression) !== null && _e !== void 0 ? _e : [
            compression_js_1.compressionGzip,
            compression_js_1.compressionBrotli,
        ] });
}
exports.validateNodeTransportOptions = validateNodeTransportOptions;
