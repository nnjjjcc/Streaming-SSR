"use strict";
// Copyright 2021-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createGrpcWebTransport = void 0;
const protocol_grpc_web_1 = require("@bufbuild/connect/protocol-grpc-web");
const validate_node_transport_options_js_1 = require("./validate-node-transport-options.js");
/**
 * Create a Transport for the gRPC-web protocol using the Node.js `http`,
 * `http2`, or `http2` module.
 */
function createGrpcWebTransport(options) {
    const _a = (0, validate_node_transport_options_js_1.validateNodeTransportOptions)(options), { client } = _a, opt = __rest(_a, ["client"]);
    return (0, protocol_grpc_web_1.createTransport)(Object.assign(Object.assign({}, opt), { httpClient: client }));
}
exports.createGrpcWebTransport = createGrpcWebTransport;
