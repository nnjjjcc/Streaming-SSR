"use strict";
/**
 * @@xhs/hulk-decorators
 *
 * ```shell
 * npm i @xhs/hulk-decorators -S
 * ```
 * **IMPORTANT：**
 * - **{@linkcode Hulk}** 其他所有装饰器正确生效的基础
 *
 * **参数装饰器：**
 * - **{@linkcode Req}** 用来提取请求的request（即ctx.req）
 * - **{@linkcode Res}** 用来提取请求的response（即ctx.res）
 * - **{@linkcode Headers}** 用来提取请求的headers
 * - **{@linkcode Query}** 用来提取请求的query
 * - **{@linkcode Body}** 用来提取请求的body
 * - **{@linkcode Store}** 用来提取路由的store
 *
 * **属性装饰器：**
 * - **{@linkcode Schema}** 用来通过 fluent-api {@linkcode S} 设置属性的json schema，最终聚合成参数的json schema
 *
 * **方法：**
 * - **{@linkcode reflectSchema}** 获取指定class上定义的json schema
 * - **{@linkcode validate}** 传入定义过schema的class和json手动校验
 *
 * @module @xhs/hulk-decorators
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.organizeValidateHandler = exports.reflectSchema = exports.Schema = exports.S = exports.Next = exports.Res = exports.Store = exports.Version = exports.Host = exports.State = exports.Body = exports.Query = exports.Params = exports.Headers = exports.Req = exports.parameterMetadataService = exports.ParameterMetadataKey = exports.RouterService = exports.AttachStore = exports.AttachVersion = exports.AttachHost = exports.Active = exports.Custom = exports.All = exports.Connect = exports.Trace = exports.Options = exports.Head = exports.Delete = exports.Patch = exports.Put = exports.Post = exports.Get = exports.Controller = exports.parseRouteOptions = exports.routeMetadataService = exports.MethodMetadataKey = exports.AsyncStore = exports.AsyncContext = exports.Hulk = exports.hulkService = exports.AttachMetadata = exports.isTypedMetadata = exports.isSpecifiedMetadata = exports.AnonymousContext = exports.AsyncProperty = exports.MetadataKey = exports.MetadataType = exports.serveStatic = exports.Koa = void 0;
exports.isOtherThanClass = exports.isClass = exports.callsite = exports.Response = exports.HttpError = exports.AttachMiddleware = exports.Middleware = exports.middlewareMetadataService = exports.MiddlewareKeyword = exports.organizeTransformHandler = exports.Transform = exports.validate = void 0;
const Koa = require("koa");
exports.Koa = Koa;
const serveStatic = require("koa-static");
exports.serveStatic = serveStatic;
var di_1 = require("./di");
Object.defineProperty(exports, "MetadataType", { enumerable: true, get: function () { return di_1.MetadataType; } });
Object.defineProperty(exports, "MetadataKey", { enumerable: true, get: function () { return di_1.MetadataKey; } });
Object.defineProperty(exports, "AsyncProperty", { enumerable: true, get: function () { return di_1.AsyncProperty; } });
Object.defineProperty(exports, "AnonymousContext", { enumerable: true, get: function () { return di_1.AnonymousContext; } });
Object.defineProperty(exports, "isSpecifiedMetadata", { enumerable: true, get: function () { return di_1.isSpecifiedMetadata; } });
Object.defineProperty(exports, "isTypedMetadata", { enumerable: true, get: function () { return di_1.isTypedMetadata; } });
Object.defineProperty(exports, "AttachMetadata", { enumerable: true, get: function () { return di_1.AttachMetadata; } });
Object.defineProperty(exports, "hulkService", { enumerable: true, get: function () { return di_1.hulkService; } });
Object.defineProperty(exports, "Hulk", { enumerable: true, get: function () { return di_1.Hulk; } });
Object.defineProperty(exports, "AsyncContext", { enumerable: true, get: function () { return di_1.AsyncContext; } });
Object.defineProperty(exports, "AsyncStore", { enumerable: true, get: function () { return di_1.AsyncStore; } });
var router_1 = require("./router");
Object.defineProperty(exports, "MethodMetadataKey", { enumerable: true, get: function () { return router_1.MethodMetadataKey; } });
Object.defineProperty(exports, "routeMetadataService", { enumerable: true, get: function () { return router_1.routeMetadataService; } });
Object.defineProperty(exports, "parseRouteOptions", { enumerable: true, get: function () { return router_1.parseRouteOptions; } });
Object.defineProperty(exports, "Controller", { enumerable: true, get: function () { return router_1.Controller; } });
Object.defineProperty(exports, "Get", { enumerable: true, get: function () { return router_1.Get; } });
Object.defineProperty(exports, "Post", { enumerable: true, get: function () { return router_1.Post; } });
Object.defineProperty(exports, "Put", { enumerable: true, get: function () { return router_1.Put; } });
Object.defineProperty(exports, "Patch", { enumerable: true, get: function () { return router_1.Patch; } });
Object.defineProperty(exports, "Delete", { enumerable: true, get: function () { return router_1.Delete; } });
Object.defineProperty(exports, "Head", { enumerable: true, get: function () { return router_1.Head; } });
Object.defineProperty(exports, "Options", { enumerable: true, get: function () { return router_1.Options; } });
Object.defineProperty(exports, "Trace", { enumerable: true, get: function () { return router_1.Trace; } });
Object.defineProperty(exports, "Connect", { enumerable: true, get: function () { return router_1.Connect; } });
Object.defineProperty(exports, "All", { enumerable: true, get: function () { return router_1.All; } });
Object.defineProperty(exports, "Custom", { enumerable: true, get: function () { return router_1.Custom; } });
Object.defineProperty(exports, "Active", { enumerable: true, get: function () { return router_1.Active; } });
Object.defineProperty(exports, "AttachHost", { enumerable: true, get: function () { return router_1.AttachHost; } });
Object.defineProperty(exports, "AttachVersion", { enumerable: true, get: function () { return router_1.AttachVersion; } });
Object.defineProperty(exports, "AttachStore", { enumerable: true, get: function () { return router_1.AttachStore; } });
Object.defineProperty(exports, "RouterService", { enumerable: true, get: function () { return router_1.RouterService; } });
var parameter_1 = require("./parameter");
Object.defineProperty(exports, "ParameterMetadataKey", { enumerable: true, get: function () { return parameter_1.ParameterMetadataKey; } });
Object.defineProperty(exports, "parameterMetadataService", { enumerable: true, get: function () { return parameter_1.parameterMetadataService; } });
Object.defineProperty(exports, "Req", { enumerable: true, get: function () { return parameter_1.Req; } });
Object.defineProperty(exports, "Headers", { enumerable: true, get: function () { return parameter_1.Headers; } });
Object.defineProperty(exports, "Params", { enumerable: true, get: function () { return parameter_1.Params; } });
Object.defineProperty(exports, "Query", { enumerable: true, get: function () { return parameter_1.Query; } });
Object.defineProperty(exports, "Body", { enumerable: true, get: function () { return parameter_1.Body; } });
Object.defineProperty(exports, "State", { enumerable: true, get: function () { return parameter_1.State; } });
Object.defineProperty(exports, "Host", { enumerable: true, get: function () { return parameter_1.Host; } });
Object.defineProperty(exports, "Version", { enumerable: true, get: function () { return parameter_1.Version; } });
Object.defineProperty(exports, "Store", { enumerable: true, get: function () { return parameter_1.Store; } });
Object.defineProperty(exports, "Res", { enumerable: true, get: function () { return parameter_1.Res; } });
Object.defineProperty(exports, "Next", { enumerable: true, get: function () { return parameter_1.Next; } });
Object.defineProperty(exports, "S", { enumerable: true, get: function () { return parameter_1.S; } });
Object.defineProperty(exports, "Schema", { enumerable: true, get: function () { return parameter_1.Schema; } });
Object.defineProperty(exports, "reflectSchema", { enumerable: true, get: function () { return parameter_1.reflectSchema; } });
Object.defineProperty(exports, "organizeValidateHandler", { enumerable: true, get: function () { return parameter_1.organizeValidateHandler; } });
Object.defineProperty(exports, "validate", { enumerable: true, get: function () { return parameter_1.validate; } });
Object.defineProperty(exports, "Transform", { enumerable: true, get: function () { return parameter_1.Transform; } });
Object.defineProperty(exports, "organizeTransformHandler", { enumerable: true, get: function () { return parameter_1.organizeTransformHandler; } });
var middleware_1 = require("./middleware");
Object.defineProperty(exports, "MiddlewareKeyword", { enumerable: true, get: function () { return middleware_1.MiddlewareKeyword; } });
Object.defineProperty(exports, "middlewareMetadataService", { enumerable: true, get: function () { return middleware_1.middlewareMetadataService; } });
Object.defineProperty(exports, "Middleware", { enumerable: true, get: function () { return middleware_1.Middleware; } });
Object.defineProperty(exports, "AttachMiddleware", { enumerable: true, get: function () { return middleware_1.AttachMiddleware; } });
var utils_1 = require("./utils");
Object.defineProperty(exports, "HttpError", { enumerable: true, get: function () { return utils_1.HttpError; } });
Object.defineProperty(exports, "Response", { enumerable: true, get: function () { return utils_1.Response; } });
Object.defineProperty(exports, "callsite", { enumerable: true, get: function () { return utils_1.callsite; } });
Object.defineProperty(exports, "isClass", { enumerable: true, get: function () { return utils_1.isClass; } });
Object.defineProperty(exports, "isOtherThanClass", { enumerable: true, get: function () { return utils_1.isOtherThanClass; } });
