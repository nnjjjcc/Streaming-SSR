"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Base = void 0;
class Base {
    code;
    success;
    msg;
    data;
    extra;
    constructor({ code = 0, success = true, msg, data, extra, } = {}) {
        this.code = code;
        this.success = success;
        this.msg = msg;
        this.data = data;
        this.extra = extra;
    }
    setCode(code) {
        if (code !== undefined) {
            this.code = code;
        }
        return this;
    }
    setSuccess(success) {
        if (success !== undefined) {
            this.success = success;
        }
        return this;
    }
    setMsg(msg) {
        if (msg !== undefined) {
            this.msg = msg;
        }
        return this;
    }
    setData(data) {
        if (data !== undefined) {
            this.data = data;
        }
        return this;
    }
    appendData(data) {
        if (this.data !== undefined) {
            this.data = {
                ...this.data,
                ...data,
            };
        }
        else {
            console.warn('[hulk response] appendData failed since data is unset');
        }
        return this;
    }
    setExtra(extra) {
        if (extra !== undefined) {
            this.extra = extra;
        }
        return this;
    }
    appendExtra(extra) {
        if (this.extra !== undefined) {
            this.extra = {
                ...this.extra,
                ...extra,
            };
        }
        else {
            console.warn('[hulk response] appendExtra failed since extra is unset');
        }
        return this;
    }
}
exports.Base = Base;
