/**
 * @@xhs/hulk-decorators
 *
 * ```shell
 * npm i @xhs/hulk-decorators -S
 * ```
 * **IMPORTANT：**
 * - **{@linkcode Hulk}** 其他所有装饰器正确生效的基础
 *
 * **参数装饰器：**
 * - **{@linkcode Req}** 用来提取请求的request（即ctx.req）
 * - **{@linkcode Res}** 用来提取请求的response（即ctx.res）
 * - **{@linkcode Headers}** 用来提取请求的headers
 * - **{@linkcode Query}** 用来提取请求的query
 * - **{@linkcode Body}** 用来提取请求的body
 * - **{@linkcode Store}** 用来提取路由的store
 *
 * **属性装饰器：**
 * - **{@linkcode Schema}** 用来通过 fluent-api {@linkcode S} 设置属性的json schema，最终聚合成参数的json schema
 *
 * **方法：**
 * - **{@linkcode reflectSchema}** 获取指定class上定义的json schema
 * - **{@linkcode validate}** 传入定义过schema的class和json手动校验
 *
 * @module @xhs/hulk-decorators
 *
 */
import Koa = require('koa');
import serveStatic = require('koa-static');
export { Koa, serveStatic };
export { MetadataType, MetadataKey, AsyncProperty, AnonymousContext, HulkState, HulkContext, CustomDecorator, isSpecifiedMetadata, isTypedMetadata, AttachMetadata, hulkService, Hulk, AsyncContext, AsyncStore, } from './di';
export { MethodMetadataKey, GenericMetadata, MethodMetadata, RouteMetadata, ControllerMetadata, RouteOptions, routeMetadataService, parseRouteOptions, Controller, Get, Post, Put, Patch, Delete, Head, Options, Trace, Connect, All, Custom, Active, AttachHost, AttachVersion, AttachStore, RouterService, } from './router';
export { ParameterMetadataKey, ParameterParser, JoinedParameterParser, parameterMetadataService, Req, Headers, Params, Query, Body, State, Host, Version, Store, Res, Next, ErrorObject, S, Schema, reflectSchema, organizeValidateHandler, validate, Transform, organizeTransformHandler, } from './parameter';
export { MiddlewareKeyword, MiddlewareMetadata, middlewareMetadataService, Middleware, AttachMiddleware, } from './middleware';
export { HttpErrorStatus, HttpError, Response, callsite, isClass, isOtherThanClass, } from './utils';
