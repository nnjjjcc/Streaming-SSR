/**
 * @@xhs/hulk-redis
 *
 * ```shell
 * npm i @xhs/hulk-redis -S
 * ```
 *
 * 使用方式:
 *
 * - **{@linkcode Redis}** 用来实例化连接对应redis的客户端
 *
 * ```typescript
 * import { Redis } from '@xhs/hulk-redis'
 *
 * const feConfig = new Redis({ name: 'corvus-fe-config' })
 * const key1 = 'biz:project:key1'
 * const key2 = 'biz:project:key2'
 *
 * feConfig.get(key1)
 *   .then(
 *     res1 => {
 *       console.log(res1)
 *     },
 *   )
 * feConfig.get(key2)
 *   .then(
 *     res2 => {
 *       console.log(res2)
 *     },
 *   )
 * feConfig.psetex(key1, 60000, 1)
 * feConfig.psetex(key2, 60000, 2)
 * feConfig.mget(key1, key2)
 *   .then(
 *     value => {
 *       console.log(value)
 *     },
 *   )
 * feConfig.pttl(key1)
 *   .then(
 *     res1 => {
 *       console.log(res1)
 *     },
 *   )
 * feConfig.pttl(key2)
 *   .then(
 *     res2 => {
 *       console.log(res2)
 *     },
 *   )
 *
 * // 如果对应command没有在sdk中实现的话，可以通过command方法自行
 * // 更多命令查看 https://redis.io/commands
 * feConfig.command('SETRANGE', key2, 6, 'Redis')
 *   .then(
 *     res2 => {
 *       console.log(res2)
 *     },
 *   )
 * ```
 * - done，客户端会负责维护与 redis 的连接，无需关心连接情况
 *
 * @module @xhs/hulk-redis
 *
 */
export { Redis } from './service';
