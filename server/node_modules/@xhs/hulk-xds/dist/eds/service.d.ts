import { Notifier } from './class';
import { DiscoverOptions, DiscoverOnceOptions, Address, Resource } from './interface';
export declare class Mesh {
    static resource: Promise<unknown>;
    static get(name: string): Promise<Address>;
    get(name: string): Promise<Address>;
}
export declare class EDS {
    static debug: boolean;
    static notifiers: Record<string, Notifier>;
    static terminate(): void;
    static key(options: DiscoverOptions): string;
    static onUpdate(options: DiscoverOptions, listener: (value: Resource[]) => void): () => void;
    static get(options: DiscoverOnceOptions): Promise<Address>;
    onUpdate(options: DiscoverOptions, listener: (value: Resource[]) => void): () => void;
    get(options: DiscoverOnceOptions): Promise<Address>;
    /** @deprecated This is a legacy api, will be deprecated after 0.4.0 */
    discovery(name: string): Notifier;
}
