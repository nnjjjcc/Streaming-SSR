"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts,import_extension=none"
// @generated from file envoy/api/v2/core/grpc_service.proto (package envoy.api.v2.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.GrpcService_GoogleGrpc_CallCredentials_StsService = exports.GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin = exports.GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials = exports.GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials = exports.GrpcService_GoogleGrpc_CallCredentials = exports.GrpcService_GoogleGrpc_ChannelCredentials = exports.GrpcService_GoogleGrpc_GoogleLocalCredentials = exports.GrpcService_GoogleGrpc_SslCredentials = exports.GrpcService_GoogleGrpc = exports.GrpcService_EnvoyGrpc = exports.GrpcService = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const duration_pb_1 = require("../../../../google/protobuf/duration_pb");
const base_pb_1 = require("./base_pb");
const struct_pb_1 = require("../../../../google/protobuf/struct_pb");
const empty_pb_1 = require("../../../../google/protobuf/empty_pb");
const any_pb_1 = require("../../../../google/protobuf/any_pb");
/**
 * gRPC service configuration. This is used by :ref:`ApiConfigSource
 * <envoy_api_msg_core.ApiConfigSource>` and filter configurations.
 * [#next-free-field: 6]
 *
 * @generated from message envoy.api.v2.core.GrpcService
 */
class GrpcService extends protobuf_1.Message {
    /**
     * @generated from oneof envoy.api.v2.core.GrpcService.target_specifier
     */
    targetSpecifier = { case: undefined };
    /**
     * The timeout for the gRPC request. This is the timeout for a specific
     * request.
     *
     * @generated from field: google.protobuf.Duration timeout = 3;
     */
    timeout;
    /**
     * Additional metadata to include in streams initiated to the GrpcService.
     * This can be used for scenarios in which additional ad hoc authorization
     * headers (e.g. ``x-foo-bar: baz-key``) are to be injected.
     *
     * @generated from field: repeated envoy.api.v2.core.HeaderValue initial_metadata = 5;
     */
    initialMetadata = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "envoy_grpc", kind: "message", T: GrpcService_EnvoyGrpc, oneof: "target_specifier" },
        { no: 2, name: "google_grpc", kind: "message", T: GrpcService_GoogleGrpc, oneof: "target_specifier" },
        { no: 3, name: "timeout", kind: "message", T: duration_pb_1.Duration },
        { no: 5, name: "initial_metadata", kind: "message", T: base_pb_1.HeaderValue, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService, a, b);
    }
}
exports.GrpcService = GrpcService;
/**
 * @generated from message envoy.api.v2.core.GrpcService.EnvoyGrpc
 */
class GrpcService_EnvoyGrpc extends protobuf_1.Message {
    /**
     * The name of the upstream gRPC cluster. SSL credentials will be supplied
     * in the :ref:`Cluster <envoy_api_msg_Cluster>` :ref:`transport_socket
     * <envoy_api_field_Cluster.transport_socket>`.
     *
     * @generated from field: string cluster_name = 1;
     */
    clusterName = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.EnvoyGrpc";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "cluster_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService_EnvoyGrpc().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_EnvoyGrpc().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_EnvoyGrpc().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_EnvoyGrpc, a, b);
    }
}
exports.GrpcService_EnvoyGrpc = GrpcService_EnvoyGrpc;
/**
 * [#next-free-field: 7]
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc
 */
class GrpcService_GoogleGrpc extends protobuf_1.Message {
    /**
     * The target URI when using the `Google C++ gRPC client
     * <https://github.com/grpc/grpc>`_. SSL credentials will be supplied in
     * :ref:`channel_credentials <envoy_api_field_core.GrpcService.GoogleGrpc.channel_credentials>`.
     *
     * @generated from field: string target_uri = 1;
     */
    targetUri = "";
    /**
     * @generated from field: envoy.api.v2.core.GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
     */
    channelCredentials;
    /**
     * A set of call credentials that can be composed with `channel credentials
     * <https://grpc.io/docs/guides/auth.html#credential-types>`_.
     *
     * @generated from field: repeated envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
     */
    callCredentials = [];
    /**
     * The human readable prefix to use when emitting statistics for the gRPC
     * service.
     *
     * .. csv-table::
     *    :header: Name, Type, Description
     *    :widths: 1, 1, 2
     *
     *    streams_total, Counter, Total number of streams opened
     *    streams_closed_<gRPC status code>, Counter, Total streams closed with <gRPC status code>
     *
     * @generated from field: string stat_prefix = 4;
     */
    statPrefix = "";
    /**
     * The name of the Google gRPC credentials factory to use. This must have been registered with
     * Envoy. If this is empty, a default credentials factory will be used that sets up channel
     * credentials based on other configuration parameters.
     *
     * @generated from field: string credentials_factory_name = 5;
     */
    credentialsFactoryName = "";
    /**
     * Additional configuration for site-specific customizations of the Google
     * gRPC library.
     *
     * @generated from field: google.protobuf.Struct config = 6;
     */
    config;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "target_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "channel_credentials", kind: "message", T: GrpcService_GoogleGrpc_ChannelCredentials },
        { no: 3, name: "call_credentials", kind: "message", T: GrpcService_GoogleGrpc_CallCredentials, repeated: true },
        { no: 4, name: "stat_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "credentials_factory_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "config", kind: "message", T: struct_pb_1.Struct },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService_GoogleGrpc().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_GoogleGrpc().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_GoogleGrpc().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_GoogleGrpc, a, b);
    }
}
exports.GrpcService_GoogleGrpc = GrpcService_GoogleGrpc;
/**
 * See https://grpc.io/grpc/cpp/structgrpc_1_1_ssl_credentials_options.html.
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.SslCredentials
 */
class GrpcService_GoogleGrpc_SslCredentials extends protobuf_1.Message {
    /**
     * PEM encoded server root certificates.
     *
     * @generated from field: envoy.api.v2.core.DataSource root_certs = 1;
     */
    rootCerts;
    /**
     * PEM encoded client private key.
     *
     * @generated from field: envoy.api.v2.core.DataSource private_key = 2;
     */
    privateKey;
    /**
     * PEM encoded client certificate chain.
     *
     * @generated from field: envoy.api.v2.core.DataSource cert_chain = 3;
     */
    certChain;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.SslCredentials";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "root_certs", kind: "message", T: base_pb_1.DataSource },
        { no: 2, name: "private_key", kind: "message", T: base_pb_1.DataSource },
        { no: 3, name: "cert_chain", kind: "message", T: base_pb_1.DataSource },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService_GoogleGrpc_SslCredentials().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_GoogleGrpc_SslCredentials().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_GoogleGrpc_SslCredentials().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_GoogleGrpc_SslCredentials, a, b);
    }
}
exports.GrpcService_GoogleGrpc_SslCredentials = GrpcService_GoogleGrpc_SslCredentials;
/**
 * Local channel credentials. Only UDS is supported for now.
 * See https://github.com/grpc/grpc/pull/15909.
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.GoogleLocalCredentials
 */
class GrpcService_GoogleGrpc_GoogleLocalCredentials extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.GoogleLocalCredentials";
    static fields = protobuf_1.proto3.util.newFieldList(() => []);
    static fromBinary(bytes, options) {
        return new GrpcService_GoogleGrpc_GoogleLocalCredentials().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_GoogleGrpc_GoogleLocalCredentials().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_GoogleGrpc_GoogleLocalCredentials().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_GoogleGrpc_GoogleLocalCredentials, a, b);
    }
}
exports.GrpcService_GoogleGrpc_GoogleLocalCredentials = GrpcService_GoogleGrpc_GoogleLocalCredentials;
/**
 * See https://grpc.io/docs/guides/auth.html#credential-types to understand Channel and Call
 * credential types.
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.ChannelCredentials
 */
class GrpcService_GoogleGrpc_ChannelCredentials extends protobuf_1.Message {
    /**
     * @generated from oneof envoy.api.v2.core.GrpcService.GoogleGrpc.ChannelCredentials.credential_specifier
     */
    credentialSpecifier = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.ChannelCredentials";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "ssl_credentials", kind: "message", T: GrpcService_GoogleGrpc_SslCredentials, oneof: "credential_specifier" },
        { no: 2, name: "google_default", kind: "message", T: empty_pb_1.Empty, oneof: "credential_specifier" },
        { no: 3, name: "local_credentials", kind: "message", T: GrpcService_GoogleGrpc_GoogleLocalCredentials, oneof: "credential_specifier" },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService_GoogleGrpc_ChannelCredentials().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_GoogleGrpc_ChannelCredentials().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_GoogleGrpc_ChannelCredentials().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_GoogleGrpc_ChannelCredentials, a, b);
    }
}
exports.GrpcService_GoogleGrpc_ChannelCredentials = GrpcService_GoogleGrpc_ChannelCredentials;
/**
 * [#next-free-field: 8]
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials
 */
class GrpcService_GoogleGrpc_CallCredentials extends protobuf_1.Message {
    /**
     * @generated from oneof envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.credential_specifier
     */
    credentialSpecifier = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "credential_specifier" },
        { no: 2, name: "google_compute_engine", kind: "message", T: empty_pb_1.Empty, oneof: "credential_specifier" },
        { no: 3, name: "google_refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "credential_specifier" },
        { no: 4, name: "service_account_jwt_access", kind: "message", T: GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials, oneof: "credential_specifier" },
        { no: 5, name: "google_iam", kind: "message", T: GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials, oneof: "credential_specifier" },
        { no: 6, name: "from_plugin", kind: "message", T: GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin, oneof: "credential_specifier" },
        { no: 7, name: "sts_service", kind: "message", T: GrpcService_GoogleGrpc_CallCredentials_StsService, oneof: "credential_specifier" },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService_GoogleGrpc_CallCredentials().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_GoogleGrpc_CallCredentials().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_GoogleGrpc_CallCredentials().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_GoogleGrpc_CallCredentials, a, b);
    }
}
exports.GrpcService_GoogleGrpc_CallCredentials = GrpcService_GoogleGrpc_CallCredentials;
/**
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials
 */
class GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials extends protobuf_1.Message {
    /**
     * @generated from field: string json_key = 1;
     */
    jsonKey = "";
    /**
     * @generated from field: uint64 token_lifetime_seconds = 2;
     */
    tokenLifetimeSeconds = protobuf_1.protoInt64.zero;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "json_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "token_lifetime_seconds", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials, a, b);
    }
}
exports.GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials = GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials;
/**
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials
 */
class GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials extends protobuf_1.Message {
    /**
     * @generated from field: string authorization_token = 1;
     */
    authorizationToken = "";
    /**
     * @generated from field: string authority_selector = 2;
     */
    authoritySelector = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "authorization_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "authority_selector", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials, a, b);
    }
}
exports.GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials = GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials;
/**
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin
 */
class GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin extends protobuf_1.Message {
    /**
     * @generated from field: string name = 1;
     */
    name = "";
    /**
     * @generated from oneof envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin.config_type
     */
    configType = { case: undefined };
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "config", kind: "message", T: struct_pb_1.Struct, oneof: "config_type" },
        { no: 3, name: "typed_config", kind: "message", T: any_pb_1.Any, oneof: "config_type" },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin, a, b);
    }
}
exports.GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin = GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin;
/**
 * Security token service configuration that allows Google gRPC to
 * fetch security token from an OAuth 2.0 authorization server.
 * See https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16 and
 * https://github.com/grpc/grpc/pull/19587.
 * [#next-free-field: 10]
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.StsService
 */
class GrpcService_GoogleGrpc_CallCredentials_StsService extends protobuf_1.Message {
    /**
     * URI of the token exchange service that handles token exchange requests.
     * [#comment:TODO(asraa): Add URI validation when implemented. Tracked by
     * https://github.com/bufbuild/protoc-gen-validate/issues/303]
     *
     * @generated from field: string token_exchange_service_uri = 1;
     */
    tokenExchangeServiceUri = "";
    /**
     * Location of the target service or resource where the client
     * intends to use the requested security token.
     *
     * @generated from field: string resource = 2;
     */
    resource = "";
    /**
     * Logical name of the target service where the client intends to
     * use the requested security token.
     *
     * @generated from field: string audience = 3;
     */
    audience = "";
    /**
     * The desired scope of the requested security token in the
     * context of the service or resource where the token will be used.
     *
     * @generated from field: string scope = 4;
     */
    scope = "";
    /**
     * Type of the requested security token.
     *
     * @generated from field: string requested_token_type = 5;
     */
    requestedTokenType = "";
    /**
     * The path of subject token, a security token that represents the
     * identity of the party on behalf of whom the request is being made.
     *
     * @generated from field: string subject_token_path = 6;
     */
    subjectTokenPath = "";
    /**
     * Type of the subject token.
     *
     * @generated from field: string subject_token_type = 7;
     */
    subjectTokenType = "";
    /**
     * The path of actor token, a security token that represents the identity
     * of the acting party. The acting party is authorized to use the
     * requested security token and act on behalf of the subject.
     *
     * @generated from field: string actor_token_path = 8;
     */
    actorTokenPath = "";
    /**
     * Type of the actor token.
     *
     * @generated from field: string actor_token_type = 9;
     */
    actorTokenType = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.StsService";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "token_exchange_service_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "resource", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "audience", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 5, name: "requested_token_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 6, name: "subject_token_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "subject_token_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 8, name: "actor_token_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 9, name: "actor_token_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_StsService().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_StsService().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GrpcService_GoogleGrpc_CallCredentials_StsService().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GrpcService_GoogleGrpc_CallCredentials_StsService, a, b);
    }
}
exports.GrpcService_GoogleGrpc_CallCredentials_StsService = GrpcService_GoogleGrpc_CallCredentials_StsService;
