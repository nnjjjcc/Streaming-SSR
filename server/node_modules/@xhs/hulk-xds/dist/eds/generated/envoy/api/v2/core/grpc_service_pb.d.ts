import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Duration } from "../../../../google/protobuf/duration_pb";
import { DataSource, HeaderValue } from "./base_pb";
import { Struct } from "../../../../google/protobuf/struct_pb";
import { Empty } from "../../../../google/protobuf/empty_pb";
import { Any } from "../../../../google/protobuf/any_pb";
/**
 * gRPC service configuration. This is used by :ref:`ApiConfigSource
 * <envoy_api_msg_core.ApiConfigSource>` and filter configurations.
 * [#next-free-field: 6]
 *
 * @generated from message envoy.api.v2.core.GrpcService
 */
export declare class GrpcService extends Message<GrpcService> {
    /**
     * @generated from oneof envoy.api.v2.core.GrpcService.target_specifier
     */
    targetSpecifier: {
        /**
         * Envoy's in-built gRPC client.
         * See the :ref:`gRPC services overview <arch_overview_grpc_services>`
         * documentation for discussion on gRPC client selection.
         *
         * @generated from field: envoy.api.v2.core.GrpcService.EnvoyGrpc envoy_grpc = 1;
         */
        value: GrpcService_EnvoyGrpc;
        case: "envoyGrpc";
    } | {
        /**
         * `Google C++ gRPC client <https://github.com/grpc/grpc>`_
         * See the :ref:`gRPC services overview <arch_overview_grpc_services>`
         * documentation for discussion on gRPC client selection.
         *
         * @generated from field: envoy.api.v2.core.GrpcService.GoogleGrpc google_grpc = 2;
         */
        value: GrpcService_GoogleGrpc;
        case: "googleGrpc";
    } | {
        case: undefined;
        value?: undefined;
    };
    /**
     * The timeout for the gRPC request. This is the timeout for a specific
     * request.
     *
     * @generated from field: google.protobuf.Duration timeout = 3;
     */
    timeout?: Duration;
    /**
     * Additional metadata to include in streams initiated to the GrpcService.
     * This can be used for scenarios in which additional ad hoc authorization
     * headers (e.g. ``x-foo-bar: baz-key``) are to be injected.
     *
     * @generated from field: repeated envoy.api.v2.core.HeaderValue initial_metadata = 5;
     */
    initialMetadata: HeaderValue[];
    constructor(data?: PartialMessage<GrpcService>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService;
    static equals(a: GrpcService | PlainMessage<GrpcService> | undefined, b: GrpcService | PlainMessage<GrpcService> | undefined): boolean;
}
/**
 * @generated from message envoy.api.v2.core.GrpcService.EnvoyGrpc
 */
export declare class GrpcService_EnvoyGrpc extends Message<GrpcService_EnvoyGrpc> {
    /**
     * The name of the upstream gRPC cluster. SSL credentials will be supplied
     * in the :ref:`Cluster <envoy_api_msg_Cluster>` :ref:`transport_socket
     * <envoy_api_field_Cluster.transport_socket>`.
     *
     * @generated from field: string cluster_name = 1;
     */
    clusterName: string;
    constructor(data?: PartialMessage<GrpcService_EnvoyGrpc>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.EnvoyGrpc";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_EnvoyGrpc;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_EnvoyGrpc;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_EnvoyGrpc;
    static equals(a: GrpcService_EnvoyGrpc | PlainMessage<GrpcService_EnvoyGrpc> | undefined, b: GrpcService_EnvoyGrpc | PlainMessage<GrpcService_EnvoyGrpc> | undefined): boolean;
}
/**
 * [#next-free-field: 7]
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc
 */
export declare class GrpcService_GoogleGrpc extends Message<GrpcService_GoogleGrpc> {
    /**
     * The target URI when using the `Google C++ gRPC client
     * <https://github.com/grpc/grpc>`_. SSL credentials will be supplied in
     * :ref:`channel_credentials <envoy_api_field_core.GrpcService.GoogleGrpc.channel_credentials>`.
     *
     * @generated from field: string target_uri = 1;
     */
    targetUri: string;
    /**
     * @generated from field: envoy.api.v2.core.GrpcService.GoogleGrpc.ChannelCredentials channel_credentials = 2;
     */
    channelCredentials?: GrpcService_GoogleGrpc_ChannelCredentials;
    /**
     * A set of call credentials that can be composed with `channel credentials
     * <https://grpc.io/docs/guides/auth.html#credential-types>`_.
     *
     * @generated from field: repeated envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials call_credentials = 3;
     */
    callCredentials: GrpcService_GoogleGrpc_CallCredentials[];
    /**
     * The human readable prefix to use when emitting statistics for the gRPC
     * service.
     *
     * .. csv-table::
     *    :header: Name, Type, Description
     *    :widths: 1, 1, 2
     *
     *    streams_total, Counter, Total number of streams opened
     *    streams_closed_<gRPC status code>, Counter, Total streams closed with <gRPC status code>
     *
     * @generated from field: string stat_prefix = 4;
     */
    statPrefix: string;
    /**
     * The name of the Google gRPC credentials factory to use. This must have been registered with
     * Envoy. If this is empty, a default credentials factory will be used that sets up channel
     * credentials based on other configuration parameters.
     *
     * @generated from field: string credentials_factory_name = 5;
     */
    credentialsFactoryName: string;
    /**
     * Additional configuration for site-specific customizations of the Google
     * gRPC library.
     *
     * @generated from field: google.protobuf.Struct config = 6;
     */
    config?: Struct;
    constructor(data?: PartialMessage<GrpcService_GoogleGrpc>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_GoogleGrpc;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc;
    static equals(a: GrpcService_GoogleGrpc | PlainMessage<GrpcService_GoogleGrpc> | undefined, b: GrpcService_GoogleGrpc | PlainMessage<GrpcService_GoogleGrpc> | undefined): boolean;
}
/**
 * See https://grpc.io/grpc/cpp/structgrpc_1_1_ssl_credentials_options.html.
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.SslCredentials
 */
export declare class GrpcService_GoogleGrpc_SslCredentials extends Message<GrpcService_GoogleGrpc_SslCredentials> {
    /**
     * PEM encoded server root certificates.
     *
     * @generated from field: envoy.api.v2.core.DataSource root_certs = 1;
     */
    rootCerts?: DataSource;
    /**
     * PEM encoded client private key.
     *
     * @generated from field: envoy.api.v2.core.DataSource private_key = 2;
     */
    privateKey?: DataSource;
    /**
     * PEM encoded client certificate chain.
     *
     * @generated from field: envoy.api.v2.core.DataSource cert_chain = 3;
     */
    certChain?: DataSource;
    constructor(data?: PartialMessage<GrpcService_GoogleGrpc_SslCredentials>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.SslCredentials";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_GoogleGrpc_SslCredentials;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_SslCredentials;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_SslCredentials;
    static equals(a: GrpcService_GoogleGrpc_SslCredentials | PlainMessage<GrpcService_GoogleGrpc_SslCredentials> | undefined, b: GrpcService_GoogleGrpc_SslCredentials | PlainMessage<GrpcService_GoogleGrpc_SslCredentials> | undefined): boolean;
}
/**
 * Local channel credentials. Only UDS is supported for now.
 * See https://github.com/grpc/grpc/pull/15909.
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.GoogleLocalCredentials
 */
export declare class GrpcService_GoogleGrpc_GoogleLocalCredentials extends Message<GrpcService_GoogleGrpc_GoogleLocalCredentials> {
    constructor(data?: PartialMessage<GrpcService_GoogleGrpc_GoogleLocalCredentials>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.GoogleLocalCredentials";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_GoogleGrpc_GoogleLocalCredentials;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_GoogleLocalCredentials;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_GoogleLocalCredentials;
    static equals(a: GrpcService_GoogleGrpc_GoogleLocalCredentials | PlainMessage<GrpcService_GoogleGrpc_GoogleLocalCredentials> | undefined, b: GrpcService_GoogleGrpc_GoogleLocalCredentials | PlainMessage<GrpcService_GoogleGrpc_GoogleLocalCredentials> | undefined): boolean;
}
/**
 * See https://grpc.io/docs/guides/auth.html#credential-types to understand Channel and Call
 * credential types.
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.ChannelCredentials
 */
export declare class GrpcService_GoogleGrpc_ChannelCredentials extends Message<GrpcService_GoogleGrpc_ChannelCredentials> {
    /**
     * @generated from oneof envoy.api.v2.core.GrpcService.GoogleGrpc.ChannelCredentials.credential_specifier
     */
    credentialSpecifier: {
        /**
         * @generated from field: envoy.api.v2.core.GrpcService.GoogleGrpc.SslCredentials ssl_credentials = 1;
         */
        value: GrpcService_GoogleGrpc_SslCredentials;
        case: "sslCredentials";
    } | {
        /**
         * https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61
         *
         * @generated from field: google.protobuf.Empty google_default = 2;
         */
        value: Empty;
        case: "googleDefault";
    } | {
        /**
         * @generated from field: envoy.api.v2.core.GrpcService.GoogleGrpc.GoogleLocalCredentials local_credentials = 3;
         */
        value: GrpcService_GoogleGrpc_GoogleLocalCredentials;
        case: "localCredentials";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<GrpcService_GoogleGrpc_ChannelCredentials>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.ChannelCredentials";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_GoogleGrpc_ChannelCredentials;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_ChannelCredentials;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_ChannelCredentials;
    static equals(a: GrpcService_GoogleGrpc_ChannelCredentials | PlainMessage<GrpcService_GoogleGrpc_ChannelCredentials> | undefined, b: GrpcService_GoogleGrpc_ChannelCredentials | PlainMessage<GrpcService_GoogleGrpc_ChannelCredentials> | undefined): boolean;
}
/**
 * [#next-free-field: 8]
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials
 */
export declare class GrpcService_GoogleGrpc_CallCredentials extends Message<GrpcService_GoogleGrpc_CallCredentials> {
    /**
     * @generated from oneof envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.credential_specifier
     */
    credentialSpecifier: {
        /**
         * Access token credentials.
         * https://grpc.io/grpc/cpp/namespacegrpc.html#ad3a80da696ffdaea943f0f858d7a360d.
         *
         * @generated from field: string access_token = 1;
         */
        value: string;
        case: "accessToken";
    } | {
        /**
         * Google Compute Engine credentials.
         * https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61
         *
         * @generated from field: google.protobuf.Empty google_compute_engine = 2;
         */
        value: Empty;
        case: "googleComputeEngine";
    } | {
        /**
         * Google refresh token credentials.
         * https://grpc.io/grpc/cpp/namespacegrpc.html#a96901c997b91bc6513b08491e0dca37c.
         *
         * @generated from field: string google_refresh_token = 3;
         */
        value: string;
        case: "googleRefreshToken";
    } | {
        /**
         * Service Account JWT Access credentials.
         * https://grpc.io/grpc/cpp/namespacegrpc.html#a92a9f959d6102461f66ee973d8e9d3aa.
         *
         * @generated from field: envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials service_account_jwt_access = 4;
         */
        value: GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials;
        case: "serviceAccountJwtAccess";
    } | {
        /**
         * Google IAM credentials.
         * https://grpc.io/grpc/cpp/namespacegrpc.html#a9fc1fc101b41e680d47028166e76f9d0.
         *
         * @generated from field: envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials google_iam = 5;
         */
        value: GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials;
        case: "googleIam";
    } | {
        /**
         * Custom authenticator credentials.
         * https://grpc.io/grpc/cpp/namespacegrpc.html#a823c6a4b19ffc71fb33e90154ee2ad07.
         * https://grpc.io/docs/guides/auth.html#extending-grpc-to-support-other-authentication-mechanisms.
         *
         * @generated from field: envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin from_plugin = 6;
         */
        value: GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin;
        case: "fromPlugin";
    } | {
        /**
         * Custom security token service which implements OAuth 2.0 token exchange.
         * https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16
         * See https://github.com/grpc/grpc/pull/19587.
         *
         * @generated from field: envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.StsService sts_service = 7;
         */
        value: GrpcService_GoogleGrpc_CallCredentials_StsService;
        case: "stsService";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<GrpcService_GoogleGrpc_CallCredentials>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_GoogleGrpc_CallCredentials;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials;
    static equals(a: GrpcService_GoogleGrpc_CallCredentials | PlainMessage<GrpcService_GoogleGrpc_CallCredentials> | undefined, b: GrpcService_GoogleGrpc_CallCredentials | PlainMessage<GrpcService_GoogleGrpc_CallCredentials> | undefined): boolean;
}
/**
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials
 */
export declare class GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials extends Message<GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials> {
    /**
     * @generated from field: string json_key = 1;
     */
    jsonKey: string;
    /**
     * @generated from field: uint64 token_lifetime_seconds = 2;
     */
    tokenLifetimeSeconds: bigint;
    constructor(data?: PartialMessage<GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials;
    static equals(a: GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials | PlainMessage<GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials> | undefined, b: GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials | PlainMessage<GrpcService_GoogleGrpc_CallCredentials_ServiceAccountJWTAccessCredentials> | undefined): boolean;
}
/**
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials
 */
export declare class GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials extends Message<GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials> {
    /**
     * @generated from field: string authorization_token = 1;
     */
    authorizationToken: string;
    /**
     * @generated from field: string authority_selector = 2;
     */
    authoritySelector: string;
    constructor(data?: PartialMessage<GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials;
    static equals(a: GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials | PlainMessage<GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials> | undefined, b: GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials | PlainMessage<GrpcService_GoogleGrpc_CallCredentials_GoogleIAMCredentials> | undefined): boolean;
}
/**
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin
 */
export declare class GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin extends Message<GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin> {
    /**
     * @generated from field: string name = 1;
     */
    name: string;
    /**
     * @generated from oneof envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin.config_type
     */
    configType: {
        /**
         * @generated from field: google.protobuf.Struct config = 2 [deprecated = true];
         * @deprecated
         */
        value: Struct;
        case: "config";
    } | {
        /**
         * @generated from field: google.protobuf.Any typed_config = 3;
         */
        value: Any;
        case: "typedConfig";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin;
    static equals(a: GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin | PlainMessage<GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin> | undefined, b: GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin | PlainMessage<GrpcService_GoogleGrpc_CallCredentials_MetadataCredentialsFromPlugin> | undefined): boolean;
}
/**
 * Security token service configuration that allows Google gRPC to
 * fetch security token from an OAuth 2.0 authorization server.
 * See https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16 and
 * https://github.com/grpc/grpc/pull/19587.
 * [#next-free-field: 10]
 *
 * @generated from message envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.StsService
 */
export declare class GrpcService_GoogleGrpc_CallCredentials_StsService extends Message<GrpcService_GoogleGrpc_CallCredentials_StsService> {
    /**
     * URI of the token exchange service that handles token exchange requests.
     * [#comment:TODO(asraa): Add URI validation when implemented. Tracked by
     * https://github.com/bufbuild/protoc-gen-validate/issues/303]
     *
     * @generated from field: string token_exchange_service_uri = 1;
     */
    tokenExchangeServiceUri: string;
    /**
     * Location of the target service or resource where the client
     * intends to use the requested security token.
     *
     * @generated from field: string resource = 2;
     */
    resource: string;
    /**
     * Logical name of the target service where the client intends to
     * use the requested security token.
     *
     * @generated from field: string audience = 3;
     */
    audience: string;
    /**
     * The desired scope of the requested security token in the
     * context of the service or resource where the token will be used.
     *
     * @generated from field: string scope = 4;
     */
    scope: string;
    /**
     * Type of the requested security token.
     *
     * @generated from field: string requested_token_type = 5;
     */
    requestedTokenType: string;
    /**
     * The path of subject token, a security token that represents the
     * identity of the party on behalf of whom the request is being made.
     *
     * @generated from field: string subject_token_path = 6;
     */
    subjectTokenPath: string;
    /**
     * Type of the subject token.
     *
     * @generated from field: string subject_token_type = 7;
     */
    subjectTokenType: string;
    /**
     * The path of actor token, a security token that represents the identity
     * of the acting party. The acting party is authorized to use the
     * requested security token and act on behalf of the subject.
     *
     * @generated from field: string actor_token_path = 8;
     */
    actorTokenPath: string;
    /**
     * Type of the actor token.
     *
     * @generated from field: string actor_token_type = 9;
     */
    actorTokenType: string;
    constructor(data?: PartialMessage<GrpcService_GoogleGrpc_CallCredentials_StsService>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.StsService";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcService_GoogleGrpc_CallCredentials_StsService;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials_StsService;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcService_GoogleGrpc_CallCredentials_StsService;
    static equals(a: GrpcService_GoogleGrpc_CallCredentials_StsService | PlainMessage<GrpcService_GoogleGrpc_CallCredentials_StsService> | undefined, b: GrpcService_GoogleGrpc_CallCredentials_StsService | PlainMessage<GrpcService_GoogleGrpc_CallCredentials_StsService> | undefined): boolean;
}
