"use strict";
// @generated by protoc-gen-es v1.2.0 with parameter "target=ts,import_extension=none"
// @generated from file envoy/api/v2/core/socket_option.proto (package envoy.api.v2.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketOption_SocketState = exports.SocketOption = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * Generic socket option message. This would be used to set socket options that
 * might not exist in upstream kernels or precompiled Envoy binaries.
 * [#next-free-field: 7]
 *
 * @generated from message envoy.api.v2.core.SocketOption
 */
class SocketOption extends protobuf_1.Message {
    /**
     * An optional name to give this socket option for debugging, etc.
     * Uniqueness is not required and no special meaning is assumed.
     *
     * @generated from field: string description = 1;
     */
    description = "";
    /**
     * Corresponding to the level value passed to setsockopt, such as IPPROTO_TCP
     *
     * @generated from field: int64 level = 2;
     */
    level = protobuf_1.protoInt64.zero;
    /**
     * The numeric name as passed to setsockopt
     *
     * @generated from field: int64 name = 3;
     */
    name = protobuf_1.protoInt64.zero;
    /**
     * @generated from oneof envoy.api.v2.core.SocketOption.value
     */
    value = { case: undefined };
    /**
     * The state in which the option will be applied. When used in BindConfig
     * STATE_PREBIND is currently the only valid value.
     *
     * @generated from field: envoy.api.v2.core.SocketOption.SocketState state = 6;
     */
    state = SocketOption_SocketState.STATE_PREBIND;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "envoy.api.v2.core.SocketOption";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "level", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "name", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 4, name: "int_value", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "value" },
        { no: 5, name: "buf_value", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "value" },
        { no: 6, name: "state", kind: "enum", T: protobuf_1.proto3.getEnumType(SocketOption_SocketState) },
    ]);
    static fromBinary(bytes, options) {
        return new SocketOption().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SocketOption().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SocketOption().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SocketOption, a, b);
    }
}
exports.SocketOption = SocketOption;
/**
 * @generated from enum envoy.api.v2.core.SocketOption.SocketState
 */
var SocketOption_SocketState;
(function (SocketOption_SocketState) {
    /**
     * Socket options are applied after socket creation but before binding the socket to a port
     *
     * @generated from enum value: STATE_PREBIND = 0;
     */
    SocketOption_SocketState[SocketOption_SocketState["STATE_PREBIND"] = 0] = "STATE_PREBIND";
    /**
     * Socket options are applied after binding the socket to a port but before calling listen()
     *
     * @generated from enum value: STATE_BOUND = 1;
     */
    SocketOption_SocketState[SocketOption_SocketState["STATE_BOUND"] = 1] = "STATE_BOUND";
    /**
     * Socket options are applied after calling listen()
     *
     * @generated from enum value: STATE_LISTENING = 2;
     */
    SocketOption_SocketState[SocketOption_SocketState["STATE_LISTENING"] = 2] = "STATE_LISTENING";
})(SocketOption_SocketState || (exports.SocketOption_SocketState = SocketOption_SocketState = {}));
// Retrieve enum metadata with: proto3.getEnumType(SocketOption_SocketState)
protobuf_1.proto3.util.setEnumType(SocketOption_SocketState, "envoy.api.v2.core.SocketOption.SocketState", [
    { no: 0, name: "STATE_PREBIND" },
    { no: 1, name: "STATE_BOUND" },
    { no: 2, name: "STATE_LISTENING" },
]);
