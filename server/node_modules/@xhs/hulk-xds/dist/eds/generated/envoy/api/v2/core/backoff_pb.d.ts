import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Duration } from "../../../../google/protobuf/duration_pb";
/**
 * Configuration defining a jittered exponential back off strategy.
 *
 * @generated from message envoy.api.v2.core.BackoffStrategy
 */
export declare class BackoffStrategy extends Message<BackoffStrategy> {
    /**
     * The base interval to be used for the next back off computation. It should
     * be greater than zero and less than or equal to :ref:`max_interval
     * <envoy_api_field_core.BackoffStrategy.max_interval>`.
     *
     * @generated from field: google.protobuf.Duration base_interval = 1;
     */
    baseInterval?: Duration;
    /**
     * Specifies the maximum interval between retries. This parameter is optional,
     * but must be greater than or equal to the :ref:`base_interval
     * <envoy_api_field_core.BackoffStrategy.base_interval>` if set. The default
     * is 10 times the :ref:`base_interval
     * <envoy_api_field_core.BackoffStrategy.base_interval>`.
     *
     * @generated from field: google.protobuf.Duration max_interval = 2;
     */
    maxInterval?: Duration;
    constructor(data?: PartialMessage<BackoffStrategy>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "envoy.api.v2.core.BackoffStrategy";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BackoffStrategy;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BackoffStrategy;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BackoffStrategy;
    static equals(a: BackoffStrategy | PlainMessage<BackoffStrategy> | undefined, b: BackoffStrategy | PlainMessage<BackoffStrategy> | undefined): boolean;
}
