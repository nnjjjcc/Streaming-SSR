import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * @generated from enum udpa.annotations.PackageVersionStatus
 */
export declare enum PackageVersionStatus {
    /**
     * Unknown package version status.
     *
     * @generated from enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * This version of the package is frozen.
     *
     * @generated from enum value: FROZEN = 1;
     */
    FROZEN = 1,
    /**
     * This version of the package is the active development version.
     *
     * @generated from enum value: ACTIVE = 2;
     */
    ACTIVE = 2,
    /**
     * This version of the package is the candidate for the next major version. It
     * is typically machine generated from the active development version.
     *
     * @generated from enum value: NEXT_MAJOR_VERSION_CANDIDATE = 3;
     */
    NEXT_MAJOR_VERSION_CANDIDATE = 3
}
/**
 * @generated from message udpa.annotations.StatusAnnotation
 */
export declare class StatusAnnotation extends Message<StatusAnnotation> {
    /**
     * The entity is work-in-progress and subject to breaking changes.
     *
     * @generated from field: bool work_in_progress = 1;
     */
    workInProgress: boolean;
    /**
     * The entity belongs to a package with the given version status.
     *
     * @generated from field: udpa.annotations.PackageVersionStatus package_version_status = 2;
     */
    packageVersionStatus: PackageVersionStatus;
    constructor(data?: PartialMessage<StatusAnnotation>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "udpa.annotations.StatusAnnotation";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusAnnotation;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusAnnotation;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusAnnotation;
    static equals(a: StatusAnnotation | PlainMessage<StatusAnnotation> | undefined, b: StatusAnnotation | PlainMessage<StatusAnnotation> | undefined): boolean;
}
