"use strict";
// THIS FILE IS DEPRECATED
// Users should instead use the corresponding proto in the xds tree.
// No new changes will be accepted here.
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileMigrateAnnotation = exports.FieldMigrateAnnotation = exports.MigrateAnnotation = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message udpa.annotations.MigrateAnnotation
 */
class MigrateAnnotation extends protobuf_1.Message {
    /**
     * Rename the message/enum/enum value in next version.
     *
     * @generated from field: string rename = 1;
     */
    rename = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "udpa.annotations.MigrateAnnotation";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "rename", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new MigrateAnnotation().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MigrateAnnotation().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MigrateAnnotation().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(MigrateAnnotation, a, b);
    }
}
exports.MigrateAnnotation = MigrateAnnotation;
/**
 * @generated from message udpa.annotations.FieldMigrateAnnotation
 */
class FieldMigrateAnnotation extends protobuf_1.Message {
    /**
     * Rename the field in next version.
     *
     * @generated from field: string rename = 1;
     */
    rename = "";
    /**
     * Add the field to a named oneof in next version. If this already exists, the
     * field will join its siblings under the oneof, otherwise a new oneof will be
     * created with the given name.
     *
     * @generated from field: string oneof_promotion = 2;
     */
    oneofPromotion = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "udpa.annotations.FieldMigrateAnnotation";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "rename", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "oneof_promotion", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new FieldMigrateAnnotation().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new FieldMigrateAnnotation().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new FieldMigrateAnnotation().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(FieldMigrateAnnotation, a, b);
    }
}
exports.FieldMigrateAnnotation = FieldMigrateAnnotation;
/**
 * @generated from message udpa.annotations.FileMigrateAnnotation
 */
class FileMigrateAnnotation extends protobuf_1.Message {
    /**
     * Move all types in the file to another package, this implies changing proto
     * file path.
     *
     * @generated from field: string move_to_package = 2;
     */
    moveToPackage = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "udpa.annotations.FileMigrateAnnotation";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 2, name: "move_to_package", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new FileMigrateAnnotation().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new FileMigrateAnnotation().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new FileMigrateAnnotation().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(FileMigrateAnnotation, a, b);
    }
}
exports.FileMigrateAnnotation = FileMigrateAnnotation;
