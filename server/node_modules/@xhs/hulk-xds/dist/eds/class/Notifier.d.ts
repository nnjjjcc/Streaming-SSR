import { DiscoverOptions, NotifierDiscoverOptions, NotifierDiscoverOnceOptions, Resource } from '../interface';
export declare class Notifier {
    static workerUrl: URL;
    static MANUAL_EXIT_CODE: number;
    private worker?;
    private name;
    private protocol;
    private resource?;
    private listeners;
    private getIndex;
    private getQueue;
    constructor(options: Pick<DiscoverOptions, 'name' | 'protocol'>);
    private getMessage;
    private init;
    private reportState;
    terminate(): void;
    onUpdate({ envTag }: NotifierDiscoverOptions, listener: (value: Resource[]) => void): () => void;
    private roundRobin;
    get({ envTag, timeout, loose, startTime, }: NotifierDiscoverOnceOptions): Promise<Resource>;
}
