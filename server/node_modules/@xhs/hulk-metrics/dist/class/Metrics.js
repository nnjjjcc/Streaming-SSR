"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metrics = void 0;
const prom_client_1 = require("prom-client");
const hulk_env_1 = require("@xhs/hulk-env");
class Metrics {
    static pkgInfo = (0, hulk_env_1.getPKGInfo)();
    static artifactLabels = {
        artifactName: Metrics.pkgInfo?.name ?? 'UNKNOWN',
        artifactVersion: Metrics.pkgInfo?.version ?? 'UNKNOWN',
        envTag: (0, hulk_env_1.getEnvTag)() ?? 'default',
    };
    static defaultMetrics = process.env.DISABLE_DEFAULT_METRICS !== 'true'
        ? (0, prom_client_1.collectDefaultMetrics)({
            labels: {
                ...Metrics.artifactLabels,
                ip: (0, hulk_env_1.getIPv4)() ?? 'UNKNOWN',
            },
        })
        : undefined;
    static createObserver(configuration) {
        class O extends prom_client_1.Summary {
            constructor() {
                super({
                    percentiles: [0.5, 0.8, 0.9, 0.99],
                    maxAgeSeconds: 60,
                    ageBuckets: 5,
                    ...configuration,
                });
            }
            looseObserve(labels, value) {
                this.observe({ ...Metrics.artifactLabels, ...labels }, value);
            }
            strictObserve(labels, value) {
                this.observe({ ...Metrics.artifactLabels, ...labels }, value);
            }
        }
        return new O();
    }
}
exports.Metrics = Metrics;
